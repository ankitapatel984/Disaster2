// Language translations
const translations = {
    en: {
        'page-title': 'SafeGuard - Disaster Prediction & Safe Shelter Navigation',
        'logo': 'ЁЯЫбя╕П SafeGuard',
        'nav-home': 'Home',
        'nav-predictions': 'Predictions',
        'nav-safe-routes': 'Safe Routes',
        'nav-alerts': 'Alerts',
        'nav-game': 'Preparedness Quiz',
        'nav-donation': 'Donate',
        'nav-kit': 'Emergency Kit',
        'hero-title': 'Stay Safe, Stay Prepared',
        'hero-description': 'Get real-time disaster predictions, find safe evacuation routes, and prepare for emergencies with our comprehensive disaster management platform.',
        'hero-btn-predictions': 'Check Predictions',
        'hero-btn-routes': 'Find Safe Route',
        'predictions-title': 'Disaster Predictions',
        'search-placeholder': 'Enter city or location...',
        'search-btn': 'Search',
        'routes-title': 'Safe Routes & Shelters',
        'map-placeholder': 'ЁЯЧ║я╕П Interactive Map Placeholder',
        'map-description': 'This would show real-time safe routes and shelter locations',
        'find-route-btn': 'Get Safe Route to Nearest Shelter',
        'alerts-title': 'Emergency Alerts',
        'quiz-title': 'Disaster Preparedness Quiz',
        'quiz-q1': 'What should you do first when you hear a tornado warning?',
        'quiz-q1-a': 'Go to the basement or lowest floor',
        'quiz-q1-b': 'Look outside to see the tornado',
        'quiz-q1-c': 'Drive away from the area',
        'quiz-q1-d': 'Open all windows',
        'quiz-score': 'Score:',
        'quiz-next': 'Next Question',
        'quiz-restart': 'Restart Quiz',
        'donation-title': 'Support Disaster Relief',
        'donation-subtitle': 'Help Communities in Need',
        'donation-description': 'Your donation helps provide emergency supplies, shelter, and support to communities affected by natural disasters.',
        'amount-25': '$25',
        'amount-50': '$50',
        'amount-100': '$100',
        'amount-250': '$250',
        'custom-amount-placeholder': 'Custom amount',
        'name-placeholder': 'Full Name',
        'email-placeholder': 'Email Address',
        'donate-btn': 'Donate Now',
        'kit-title': 'Emergency Preparedness Kit',
        'kit-basic': 'Basic Supplies',
        'kit-food': 'Food & Water',
        'kit-medical': 'Medical Supplies',
        'kit-progress': 'Progress:',
        'footer-about': 'About SafeGuard',
        'footer-description': 'Protecting communities through advanced disaster prediction and emergency preparedness.',
        'footer-links': 'Quick Links',
        'footer-contact': 'Contact',
        'footer-copyright': '┬й 2025 SafeGuard. All rights reserved.'
    },
    hi: {
        'page-title': 'рд╕реЗрдлрдЧрд╛рд░реНрдб - рдЖрдкрджрд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди рдФрд░ рд╕реБрд░рдХреНрд╖рд┐рдд рдЖрд╢реНрд░рдп рдиреЗрд╡рд┐рдЧреЗрд╢рди',
        'logo': 'ЁЯЫбя╕П рд╕реЗрдлрдЧрд╛рд░реНрдб',
        'nav-home': 'рд╣реЛрдо',
        'nav-predictions': 'рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди',
        'nav-safe-routes': 'рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╛рд╕реНрддреЗ',
        'nav-alerts': 'рдЕрд▓рд░реНрдЯ',
        'nav-game': 'рддреИрдпрд╛рд░реА рдкреНрд░рд╢реНрдиреЛрддреНрддрд░реА',
        'nav-donation': 'рджрд╛рди рдХрд░реЗрдВ',
        'nav-kit': 'рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдХрд┐рдЯ',
        'hero-title': 'рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╣реЗрдВ, рддреИрдпрд╛рд░ рд░рд╣реЗрдВ',
        'hero-description': 'рд╣рдорд╛рд░реЗ рд╡реНрдпрд╛рдкрдХ рдЖрдкрджрд╛ рдкреНрд░рдмрдВрдзрди рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдХреЗ рд╕рд╛рде рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдЖрдкрджрд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ, рд╕реБрд░рдХреНрд╖рд┐рдд рдирд┐рдХрд╛рд╕реА рдорд╛рд░реНрдЧ рдЦреЛрдЬреЗрдВ, рдФрд░ рдЖрдкрд╛рддрдХрд╛рд▓ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд░рд╣реЗрдВред',
        'hero-btn-predictions': 'рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди рдЬрд╛рдВрдЪреЗрдВ',
        'hero-btn-routes': 'рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╛рд╕реНрддрд╛ рдЦреЛрдЬреЗрдВ',
        'predictions-title': 'рдЖрдкрджрд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди',
        'search-placeholder': 'рд╢рд╣рд░ рдпрд╛ рд╕реНрдерд╛рди рджрд░реНрдЬ рдХрд░реЗрдВ...',
        'search-btn': 'рдЦреЛрдЬреЗрдВ',
        'routes-title': 'рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╛рд╕реНрддреЗ рдФрд░ рдЖрд╢реНрд░рдп',
        'map-placeholder': 'ЁЯЧ║я╕П рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡ рдореИрдк рдкреНрд▓реЗрд╕рд╣реЛрд▓реНрдбрд░',
        'map-description': 'рдпрд╣ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╛рд╕реНрддреЗ рдФрд░ рдЖрд╢реНрд░рдп рд╕реНрдерд╛рди рджрд┐рдЦрд╛рдПрдЧрд╛',
        'find-route-btn': 'рдирд┐рдХрдЯрддрдо рдЖрд╢реНрд░рдп рдХрд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╛рд╕реНрддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ',
        'alerts-title': 'рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдЕрд▓рд░реНрдЯ',
        'quiz-title': 'рдЖрдкрджрд╛ рддреИрдпрд╛рд░реА рдкреНрд░рд╢реНрдиреЛрддреНрддрд░реА',
        'quiz-q1': 'рдЬрдм рдЖрдк рддреВрдлрд╛рди рдХреА рдЪреЗрддрд╛рд╡рдиреА рд╕реБрдирддреЗ рд╣реИрдВ рддреЛ рдкрд╣рд▓реЗ рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП?',
        'quiz-q1-a': 'рддрд╣рдЦрд╛рдиреЗ рдпрд╛ рд╕рдмрд╕реЗ рдирд┐рдЪрд▓реА рдордВрдЬрд┐рд▓ рдкрд░ рдЬрд╛рдПрдВ',
        'quiz-q1-b': 'рддреВрдлрд╛рди рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдмрд╛рд╣рд░ рджреЗрдЦреЗрдВ',
        'quiz-q1-c': 'рдХреНрд╖реЗрддреНрд░ рд╕реЗ рджреВрд░ рдбреНрд░рд╛рдЗрд╡ рдХрд░реЗрдВ',
        'quiz-q1-d': 'рд╕рднреА рдЦрд┐рдбрд╝рдХрд┐рдпрд╛рдВ рдЦреЛрд▓реЗрдВ',
        'quiz-score': 'рд╕реНрдХреЛрд░:',
        'quiz-next': 'рдЕрдЧрд▓рд╛ рдкреНрд░рд╢реНрди',
        'quiz-restart': 'рдкреНрд░рд╢реНрдиреЛрддреНрддрд░реА рдкреБрдирдГ рдЖрд░рдВрдн рдХрд░реЗрдВ',
        'donation-title': 'рдЖрдкрджрд╛ рд░рд╛рд╣рдд рдХрд╛ рд╕рдорд░реНрдерди рдХрд░реЗрдВ',
        'donation-subtitle': 'рдЬрд░реВрд░рддрдордВрдж рд╕рдореБрджрд╛рдпреЛрдВ рдХреА рдорджрдж рдХрд░реЗрдВ',
        'donation-description': 'рдЖрдкрдХрд╛ рджрд╛рди рдкреНрд░рд╛рдХреГрддрд┐рдХ рдЖрдкрджрд╛рдУрдВ рд╕реЗ рдкреНрд░рднрд╛рд╡рд┐рдд рд╕рдореБрджрд╛рдпреЛрдВ рдХреЛ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдЖрдкреВрд░реНрддрд┐, рдЖрд╢реНрд░рдп рдФрд░ рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рджрд╛рди рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред',
        'amount-25': 'тВ╣2000',
        'amount-50': 'тВ╣4000',
        'amount-100': 'тВ╣8000',
        'amount-250': 'тВ╣20000',
        'custom-amount-placeholder': 'рдХрд╕реНрдЯрдо рд░рд╛рд╢рд┐',
        'name-placeholder': 'рдкреВрд░рд╛ рдирд╛рдо',
        'email-placeholder': 'рдИрдореЗрд▓ рдкрддрд╛',
        'donate-btn': 'рдЕрднреА рджрд╛рди рдХрд░реЗрдВ',
        'kit-title': 'рдЖрдкрд╛рддрдХрд╛рд▓реАрди рддреИрдпрд╛рд░реА рдХрд┐рдЯ',
        'kit-basic': 'рдмреБрдирд┐рдпрд╛рджреА рдЖрдкреВрд░реНрддрд┐',
        'kit-food': 'рднреЛрдЬрди рдФрд░ рдкрд╛рдиреА',
        'kit-medical': 'рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЖрдкреВрд░реНрддрд┐',
        'kit-progress': 'рдкреНрд░рдЧрддрд┐:',
        'footer-about': 'рд╕реЗрдлрдЧрд╛рд░реНрдб рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ',
        'footer-description': 'рдЙрдиреНрдирдд рдЖрдкрджрд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди рдФрд░ рдЖрдкрд╛рддрдХрд╛рд▓реАрди рддреИрдпрд╛рд░реА рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╕рдореБрджрд╛рдпреЛрдВ рдХреА рд╕реБрд░рдХреНрд╖рд╛ред',
        'footer-links': 'рддреНрд╡рд░рд┐рдд рд▓рд┐рдВрдХ',
        'footer-contact': 'рд╕рдВрдкрд░реНрдХ',
        'footer-copyright': '┬й 2025 рд╕реЗрдлрдЧрд╛рд░реНрдбред рд╕рднреА рдЕрдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред'
    },
    es: {
        'page-title': 'SafeGuard - Predicci├│n de Desastres y Navegaci├│n de Refugios Seguros',
        'logo': 'ЁЯЫбя╕П SafeGuard',
        'nav-home': 'Inicio',
        'nav-predictions': 'Predicciones',
        'nav-safe-routes': 'Rutas Seguras',
        'nav-alerts': 'Alertas',
        'nav-game': 'Quiz de Preparaci├│n',
        'nav-donation': 'Donar',
        'nav-kit': 'Kit de Emergencia',
        'hero-title': 'Mantente Seguro, Mantente Preparado',
        'hero-description': 'Obt├йn predicciones de desastres en tiempo real, encuentra rutas de evacuaci├│n seguras y prep├бrate para emergencias con nuestra plataforma integral de gesti├│n de desastres.',
        'hero-btn-predictions': 'Ver Predicciones',
        'hero-btn-routes': 'Encontrar Ruta Segura',
        'predictions-title': 'Predicciones de Desastres',
        'search-placeholder': 'Ingresa ciudad o ubicaci├│n...',
        'search-btn': 'Buscar',
        'routes-title': 'Rutas Seguras y Refugios',
        'map-placeholder': 'ЁЯЧ║я╕П Marcador de Mapa Interactivo',
        'map-description': 'Esto mostrar├нa rutas seguras en tiempo real y ubicaciones de refugios',
        'find-route-btn': 'Obtener Ruta Segura al Refugio M├бs Cercano',
        'alerts-title': 'Alertas de Emergencia',
        'quiz-title': 'Quiz de Preparaci├│n para Desastres',
        'quiz-q1': '┬┐Qu├й debes hacer primero cuando escuches una advertencia de tornado?',
        'quiz-q1-a': 'Ir al s├│tano o piso m├бs bajo',
        'quiz-q1-b': 'Mirar afuera para ver el tornado',
        'quiz-q1-c': 'Conducir lejos del ├бrea',
        'quiz-q1-d': 'Abrir todas las ventanas',
        'quiz-score': 'Puntuaci├│n:',
        'quiz-next': 'Siguiente Pregunta',
        'quiz-restart': 'Reiniciar Quiz',
        'donation-title': 'Apoyar el Alivio de Desastres',
        'donation-subtitle': 'Ayudar a Comunidades Necesitadas',
        'donation-description': 'Tu donaci├│n ayuda a proporcionar suministros de emergencia, refugio y apoyo a comunidades afectadas por desastres naturales.',
        'amount-25': '$25',
        'amount-50': '$50',
        'amount-100': '$100',
        'amount-250': '$250',
        'custom-amount-placeholder': 'Cantidad personalizada',
        'name-placeholder': 'Nombre Completo',
        'email-placeholder': 'Direcci├│n de Correo',
        'donate-btn': 'Donar Ahora',
        'kit-title': 'Kit de Preparaci├│n de Emergencia',
        'kit-basic': 'Suministros B├бsicos',
        'kit-food': 'Comida y Agua',
        'kit-medical': 'Suministros M├йdicos',
        'kit-progress': 'Progreso:',
        'footer-about': 'Acerca de SafeGuard',
        'footer-description': 'Protegiendo comunidades a trav├йs de predicci├│n avanzada de desastres y preparaci├│n de emergencias.',
        'footer-links': 'Enlaces R├бpidos',
        'footer-contact': 'Contacto',
        'footer-copyright': '┬й 2025 SafeGuard. Todos los derechos reservados.'
    }
};

// Current language
let currentLanguage = 'en';

// Quiz data
const quizData = [
    {
        question: 'What should you do first when you hear a tornado warning?',
        options: [
            'Go to the basement or lowest floor',
            'Look outside to see the tornado',
            'Drive away from the area',
            'Open all windows'
        ],
        correct: 0
    },
    {
        question: 'How much water should you store per person per day for emergencies?',
        options: [
            '1 liter',
            '2 liters',
            '4 liters',
            '6 liters'
        ],
        correct: 2
    },
    {
        question: 'What is the safest place to be during an earthquake?',
        options: [
            'In a doorway',
            'Under a heavy table',
            'Near a window',
            'On the top floor'
        ],
        correct: 1
    },
    {
        question: 'How often should you test your smoke detectors?',
        options: [
            'Once a year',
            'Every 6 months',
            'Every month',
            'Never'
        ],
        correct: 2
    },
    {
        question: 'What should you do if caught in a flood while driving?',
        options: [
            'Drive faster through the water',
            'Turn around and find another route',
            'Stop and wait in the car',
            'Open the windows'
        ],
        correct: 1
    }
];

// Emergency kit items
const kitItems = {
    'basic-supplies': [
        'Flashlight with extra batteries',
        'Battery-powered or hand crank radio',
        'First aid kit',
        'Whistle for signaling help',
        'Dust masks and plastic sheeting',
        'Moist towelettes and garbage bags',
        'Wrench or pliers to turn off utilities',
        'Manual can opener',
        'Local maps',
        'Cell phone with chargers'
    ],
    'food-water': [
        '3-day supply of water (4 liters per person per day)',
        '3-day supply of non-perishable food',
        'Canned goods',
        'Energy bars',
        'Dried fruits and nuts'
    ],
    'medical-supplies': [
        'Prescription medications',
        'Medical supplies and equipment',
        'Personal hygiene items',
        'Copies of important documents',
        'Emergency contact information'
    ]
};

// Quiz state
let currentQuestionIndex = 0;
let score = 0;
let selectedAnswer = -1;

// Page navigation
function showPage(pageId) {
    // Hide all pages
    const pages = document.querySelectorAll('.page');
    pages.forEach(page => {
        page.classList.remove('active');
    });
    
    // Show selected page
    const targetPage = document.getElementById(pageId);
    if (targetPage) {
        targetPage.classList.add('active');
        
        // Initialize page-specific content
        if (pageId === 'predictions') {
            initPredictions();
        } else if (pageId === 'alerts') {
            initAlerts();
        } else if (pageId === 'prepare-kit') {
            initKitChecklist();
        }
    }
    
    // Close mobile menu
    const navMenu = document.getElementById('nav-menu');
    navMenu.classList.remove('active');
}

// Mobile menu toggle
document.addEventListener('DOMContentLoaded', function() {
    const hamburger = document.getElementById('hamburger');
    const navMenu = document.getElementById('nav-menu');
    
    hamburger.addEventListener('click', function() {
        navMenu.classList.toggle('active');
    });
    
    // Initialize default content
    initPredictions();
    initAlerts();
    initKitChecklist();
});

// Language switching
function changeLanguage(lang) {
    currentLanguage = lang;
    updatePageText();
}

function updatePageText() {
    const elements = document.querySelectorAll('[data-translate]');
    elements.forEach(element => {
        const key = element.getAttribute('data-translate');
        if (translations[currentLanguage] && translations[currentLanguage][key]) {
            element.textContent = translations[currentLanguage][key];
        }
    });
    
    // Update placeholders
    const placeholderElements = document.querySelectorAll('[data-translate-placeholder]');
    placeholderElements.forEach(element => {
        const key = element.getAttribute('data-translate-placeholder');
        if (translations[currentLanguage] && translations[currentLanguage][key]) {
            element.placeholder = translations[currentLanguage][key];
        }
    });
}

// Predictions functionality
function initPredictions() {
    const grid = document.getElementById('predictions-grid');
    grid.innerHTML = `
        <div class="prediction-card">
            <h3>New York, NY</h3>
            <div class="risk-level risk-medium">Flood Risk: Medium</div>
            <p>Heavy rainfall expected in the next 48 hours. Monitor local conditions.</p>
            <small>Last updated: 2 hours ago</small>
        </div>
        <div class="prediction-card">
            <h3>Los Angeles, CA</h3>
            <div class="risk-level risk-high">Wildfire Risk: High</div>
            <p>Dry conditions and strong winds increase fire danger. Stay alert.</p>
            <small>Last updated: 30 minutes ago</small>
        </div>
        <div class="prediction-card">
            <h3>Miami, FL</h3>
            <div class="risk-level risk-low">Hurricane Risk: Low</div>
            <p>Current conditions are stable. Continue monitoring weather updates.</p>
            <small>Last updated: 1 hour ago</small>
        </div>
    `;
}

function searchPredictions() {
    const searchInput = document.getElementById('city-search');
    const query = searchInput.value.trim();
    
    if (!query) {
        alert('Please enter a city or location to search.');
        return;
    }
    
    // Simulate search with loading
    const grid = document.getElementById('predictions-grid');
    grid.innerHTML = '<div class="loading"></div>';
    
    setTimeout(() => {
        grid.innerHTML = `
            <div class="prediction-card">
                <h3>${query}</h3>
                <div class="risk-level risk-medium">Earthquake Risk: Medium</div>
                <p>Seismic activity detected in the region. Recommended to review emergency plans.</p>
                <small>Last updated: Just now</small>
            </div>
            <div class="prediction-card">
                <h3>${query} - Weather</h3>
                <div class="risk-level risk-low">Storm Risk: Low</div>
                <p>Weather conditions are currently stable with no immediate threats.</p>
                <small>Last updated: Just now</small>
            </div>
        `;
    }, 1000);
}

// Safe routes functionality
function findSafeRoute() {
    const resultDiv = document.getElementById('route-result');
    resultDiv.style.display = 'block';
    resultDiv.innerHTML = `
        <h4>ЁЯЫбя╕П Safe Route Found</h4>
        <p><strong>Nearest Shelter:</strong> Community Emergency Center</p>
        <p><strong>Distance:</strong> 2.3 miles</p>
        <p><strong>Estimated Time:</strong> 8 minutes by car, 25 minutes walking</p>
        <p><strong>Route:</strong> Take Main St north тЖТ Turn right on Oak Ave тЖТ Shelter will be on your left</p>
        <p><strong>Shelter Capacity:</strong> Available (150/300)</p>
        <div style="margin-top: 1rem;">
            <button class="btn btn-primary" onclick="alert('Navigation started! Follow the highlighted route.')">Start Navigation</button>
        </div>
    `;
}

// Alerts functionality
function initAlerts() {
    const container = document.getElementById('alerts-container');
    container.innerHTML = `
        <div class="alert-item alert-urgent">
            <div class="alert-header">
                <span class="alert-title">ЁЯЪи Flash Flood Warning</span>
                <span class="alert-time">2 hours ago</span>
            </div>
            <p>Flash flooding possible in low-lying areas. Avoid driving through flooded roads.</p>
            <p><strong>Location:</strong> Downtown area and surrounding valleys</p>
        </div>
        <div class="alert-item alert-moderate">
            <div class="alert-header">
                <span class="alert-title">тЪая╕П High Wind Advisory</span>
                <span class="alert-time">4 hours ago</span>
            </div>
            <p>Winds up to 45 mph expected. Secure outdoor objects and avoid driving high-profile vehicles.</p>
            <p><strong>Location:</strong> Citywide</p>
        </div>
        <div class="alert-item alert-info">
            <div class="alert-header">
                <span class="alert-title">тД╣я╕П Emergency Drill Scheduled</span>
                <span class="alert-time">1 day ago</span>
            </div>
            <p>Monthly emergency siren test scheduled for tomorrow at 12:00 PM.</p>
            <p><strong>Location:</strong> All areas</p>
        </div>
        <div class="alert-item alert-info">
            <div class="alert-header">
                <span class="alert-title">ЁЯУв Shelter Update</span>
                <span class="alert-time">2 days ago</span>
            </div>
            <p>New emergency shelter opened at Community Center. Capacity: 200 people.</p>
            <p><strong>Location:</strong> 123 Community Drive</p>
        </div>
    `;
}

// Quiz functionality
function selectAnswer(answerIndex) {
    if (selectedAnswer !== -1) return; // Already answered
    
    selectedAnswer = answerIndex;
    const options = document.querySelectorAll('.quiz-option');
    const currentQuestion = quizData[currentQuestionIndex];
    
    options.forEach((option, index) => {
        if (index === currentQuestion.correct) {
            option.classList.add('correct');
        } else if (index === answerIndex && index !== currentQuestion.correct) {
            option.classList.add('incorrect');
        }
        option.disabled = true;
    });
    
    if (answerIndex === currentQuestion.correct) {
        score++;
    }
    
    document.getElementById('score').textContent = score;
    document.getElementById('next-btn').style.display = 'inline-block';
}

function nextQuestion() {
    currentQuestionIndex++;
    selectedAnswer = -1;
    
    if (currentQuestionIndex >= quizData.length) {
        // Quiz finished
        showQuizResults();
        return;
    }
    
    const question = quizData[currentQuestionIndex];
    document.getElementById('question-text').textContent = question.question;
    
    const options = document.querySelectorAll('.quiz-option');
    options.forEach((option, index) => {
        option.textContent = question.options[index];
        option.classList.remove('correct', 'incorrect');
        option.disabled = false;
    });
    
    document.getElementById('next-btn').style.display = 'none';
}

function showQuizResults() {
    const quizContainer = document.querySelector('.quiz-question');
    const percentage = Math.round((score / quizData.length) * 100);
    let message = '';
    
    if (percentage >= 80) {
        message = 'ЁЯОЙ Excellent! You\'re well prepared for disasters.';
    } else if (percentage >= 60) {
        message = 'ЁЯСН Good job! Consider reviewing emergency procedures.';
    } else {
        message = 'ЁЯУЪ Keep learning! Emergency preparedness is important.';
    }
    
    quizContainer.innerHTML = `
        <div class="text-center">
            <h3>Quiz Complete!</h3>
            <p class="mb-2">${message}</p>
            <p class="mb-3">Final Score: ${score}/${quizData.length} (${percentage}%)</p>
        </div>
    `;
    
    document.getElementById('next-btn').style.display = 'none';
    document.getElementById('restart-btn').style.display = 'inline-block';
}

function restartQuiz() {
    currentQuestionIndex = 0;
    score = 0;
    selectedAnswer = -1;
    
    const question = quizData[0];
    document.getElementById('question-text').textContent = question.question;
    
    const options = document.querySelectorAll('.quiz-option');
    options.forEach((option, index) => {
        option.textContent = question.options[index];
        option.classList.remove('correct', 'incorrect');
        option.disabled = false;
    });
    
    document.getElementById('score').textContent = '0';
    document.getElementById('next-btn').style.display = 'none';
    document.getElementById('restart-btn').style.display = 'none';
}

// Donation functionality
function selectAmount(amount) {
    // Remove previous selections
    document.querySelectorAll('.amount-btn').forEach(btn => {
        btn.classList.remove('selected');
    });
    
    // Select new amount
    event.target.classList.add('selected');
    document.getElementById('custom-amount').value = amount;
}

// Handle donation form
document.addEventListener('DOMContentLoaded', function() {
    const donationForm = document.getElementById('donation-form');
    if (donationForm) {
        donationForm.addEventListener('submit', function(e) {
            e.preventDefault();
            alert('Thank you for your donation! This would normally process the payment.');
        });
    }
});

// Kit checklist functionality
function initKitChecklist() {
    Object.keys(kitItems).forEach(categoryId => {
        const container = document.getElementById(categoryId);
        if (container) {
            container.innerHTML = kitItems[categoryId].map((item, index) => `
                <div class="checklist-item">
                    <input type="checkbox" id="${categoryId}-${index}" onchange="updateProgress()">
                    <label for="${categoryId}-${index}">${item}</label>
                </div>
            `).join('');
        }
    });
    updateProgress();
}

function updateProgress() {
    const checkboxes = document.querySelectorAll('.checklist-item input[type="checkbox"]');
    const checkedBoxes = document.querySelectorAll('.checklist-item input[type="checkbox"]:checked');
    
    const total = checkboxes.length;
    const checked = checkedBoxes.length;
    const percentage = total > 0 ? (checked / total) * 100 : 0;
    
    const progressText = document.getElementById('progress-text');
    const progressFill = document.getElementById('progress-fill');
    
    if (progressText) {
        progressText.textContent = `${checked}/${total}`;
    }
    if (progressFill) {
        progressFill.style.width = `${percentage}%`;
    }
}

// Initialize app
document.addEventListener('DOMContentLoaded', function() {
    // Show home page by default
    showPage('home');
    
    // Initialize language
    updatePageText();
});